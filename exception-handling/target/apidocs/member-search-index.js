memberSearchIndex = [{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BaseException","l":"BaseException(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BaseException","l":"BaseException(String, String, Object[])","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object[])"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BaseException","l":"BaseException(String, String, Object[], Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object[],java.lang.Throwable)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BaseException","l":"BaseException(String, String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Throwable)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse.Builder","l":"build()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"builder()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BusinessException","l":"BusinessException(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BusinessException","l":"BusinessException(String, String, HttpStatus)","u":"%3Cinit%3E(java.lang.String,java.lang.String,org.springframework.http.HttpStatus)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BusinessException","l":"BusinessException(String, String, Object[])","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object[])"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BusinessException","l":"BusinessException(String, String, Object[], HttpStatus)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object[],org.springframework.http.HttpStatus)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BusinessException","l":"BusinessException(String, String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Throwable)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"FieldError","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"errorCode()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse.Builder","l":"errorCode(String)","u":"errorCode(java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"ErrorResponse(String, String, String, int, LocalDateTime, List<FieldError>, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.time.LocalDateTime,java.util.List,java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"ErrorResponse(String, String, String, int, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling","c":"ExceptionHandlingAutoConfiguration","l":"ExceptionHandlingAutoConfiguration()","u":"%3Cinit%3E()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"FieldError","l":"field()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"FieldError","l":"FieldError(String, Object, String)","u":"%3Cinit%3E(java.lang.String,java.lang.Object,java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"fieldErrors()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse.Builder","l":"fieldErrors(List<FieldError>)","u":"fieldErrors(java.util.List)"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"TraceIdGenerator","l":"generate()"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"TraceIdGenerator","l":"generate(String)","u":"generate(java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BaseException","l":"getErrorCode()"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BusinessException","l":"getHttpStatus()"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"ResourceNotFoundException","l":"getHttpStatus()"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"TechnicalException","l":"getHttpStatus()"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"ValidationException","l":"getHttpStatus()"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BaseException","l":"getMessageArgs()"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"BaseException","l":"getMessageKey()"},{"p":"com.github.mahdim1000.exceptionhandling","c":"ExceptionHandlingAutoConfiguration","l":"globalExceptionHandler(MessageResolver, TraceIdGenerator)","u":"globalExceptionHandler(com.github.mahdim1000.exceptionhandling.util.MessageResolver,com.github.mahdim1000.exceptionhandling.util.TraceIdGenerator)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"GlobalExceptionHandler(MessageResolver, TraceIdGenerator)","u":"%3Cinit%3E(com.github.mahdim1000.exceptionhandling.util.MessageResolver,com.github.mahdim1000.exceptionhandling.util.TraceIdGenerator)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleBindException(BindException, HttpServletRequest)","u":"handleBindException(org.springframework.validation.BindException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleBusinessException(BusinessException, HttpServletRequest)","u":"handleBusinessException(com.github.mahdim1000.exceptionhandling.exception.BusinessException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleGenericException(Exception, HttpServletRequest)","u":"handleGenericException(java.lang.Exception,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleHttpMessageNotReadableException(HttpMessageNotReadableException, HttpServletRequest)","u":"handleHttpMessageNotReadableException(org.springframework.http.converter.HttpMessageNotReadableException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleHttpRequestMethodNotSupportedException(HttpRequestMethodNotSupportedException, HttpServletRequest)","u":"handleHttpRequestMethodNotSupportedException(org.springframework.web.HttpRequestMethodNotSupportedException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleMethodArgumentNotValidException(MethodArgumentNotValidException, HttpServletRequest)","u":"handleMethodArgumentNotValidException(org.springframework.web.bind.MethodArgumentNotValidException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleMethodArgumentTypeMismatchException(MethodArgumentTypeMismatchException, HttpServletRequest)","u":"handleMethodArgumentTypeMismatchException(org.springframework.web.method.annotation.MethodArgumentTypeMismatchException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleMissingServletRequestParameterException(MissingServletRequestParameterException, HttpServletRequest)","u":"handleMissingServletRequestParameterException(org.springframework.web.bind.MissingServletRequestParameterException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleNoHandlerFoundException(NoHandlerFoundException, HttpServletRequest)","u":"handleNoHandlerFoundException(org.springframework.web.servlet.NoHandlerFoundException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleResourceNotFoundException(ResourceNotFoundException, HttpServletRequest)","u":"handleResourceNotFoundException(com.github.mahdim1000.exceptionhandling.exception.ResourceNotFoundException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleTechnicalException(TechnicalException, HttpServletRequest)","u":"handleTechnicalException(com.github.mahdim1000.exceptionhandling.exception.TechnicalException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.handler","c":"GlobalExceptionHandler","l":"handleValidationException(ValidationException, HttpServletRequest)","u":"handleValidationException(com.github.mahdim1000.exceptionhandling.exception.ValidationException,jakarta.servlet.http.HttpServletRequest)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"hashCode()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"FieldError","l":"hashCode()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"message()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"FieldError","l":"message()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse.Builder","l":"message(String)","u":"message(java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling","c":"ExceptionHandlingAutoConfiguration","l":"messageResolver(MessageSource)","u":"messageResolver(org.springframework.context.MessageSource)"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"MessageResolver","l":"MessageResolver(MessageSource)","u":"%3Cinit%3E(org.springframework.context.MessageSource)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"path()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse.Builder","l":"path(String)","u":"path(java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"FieldError","l":"rejectedValue()"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"MessageResolver","l":"resolve(String)","u":"resolve(java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"MessageResolver","l":"resolve(String, Locale)","u":"resolve(java.lang.String,java.util.Locale)"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"MessageResolver","l":"resolve(String, Object[])","u":"resolve(java.lang.String,java.lang.Object[])"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"MessageResolver","l":"resolve(String, Object[], Locale)","u":"resolve(java.lang.String,java.lang.Object[],java.util.Locale)"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"MessageResolver","l":"resolve(String, Object[], String)","u":"resolve(java.lang.String,java.lang.Object[],java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"MessageResolver","l":"resolve(String, Object[], String, Locale)","u":"resolve(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"MessageResolver","l":"resolve(String, String)","u":"resolve(java.lang.String,java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"ResourceNotFoundException","l":"ResourceNotFoundException(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"ResourceNotFoundException","l":"ResourceNotFoundException(String, String, Object[])","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object[])"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"ResourceNotFoundException","l":"ResourceNotFoundException(String, String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Throwable)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"status()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse.Builder","l":"status(int)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"TechnicalException","l":"TechnicalException(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"TechnicalException","l":"TechnicalException(String, String, HttpStatus)","u":"%3Cinit%3E(java.lang.String,java.lang.String,org.springframework.http.HttpStatus)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"TechnicalException","l":"TechnicalException(String, String, HttpStatus, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.String,org.springframework.http.HttpStatus,java.lang.Throwable)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"TechnicalException","l":"TechnicalException(String, String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Throwable)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"timestamp()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse.Builder","l":"timestamp(LocalDateTime)","u":"timestamp(java.time.LocalDateTime)"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"toString()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"FieldError","l":"toString()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse","l":"traceId()"},{"p":"com.github.mahdim1000.exceptionhandling.dto","c":"ErrorResponse.Builder","l":"traceId(String)","u":"traceId(java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling","c":"ExceptionHandlingAutoConfiguration","l":"traceIdGenerator()"},{"p":"com.github.mahdim1000.exceptionhandling.util","c":"TraceIdGenerator","l":"TraceIdGenerator()","u":"%3Cinit%3E()"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"ValidationException","l":"ValidationException(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"ValidationException","l":"ValidationException(String, String, Object[])","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object[])"},{"p":"com.github.mahdim1000.exceptionhandling.exception","c":"ValidationException","l":"ValidationException(String, String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Throwable)"}];updateSearchResults();